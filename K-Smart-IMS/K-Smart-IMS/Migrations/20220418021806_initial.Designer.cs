// <auto-generated />
using System;
using K_Smart_IMS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace K_Smart_IMS.Migrations
{
    [DbContext(typeof(InventoryContext))]
    [Migration("20220418021806_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("K_Smart_IMS.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "Appliances",
                            Name = "Appliances"
                        },
                        new
                        {
                            Id = "Baby",
                            Name = "Baby"
                        },
                        new
                        {
                            Id = "Cleaning",
                            Name = "Cleaning"
                        },
                        new
                        {
                            Id = "Clothes",
                            Name = "Clothes"
                        },
                        new
                        {
                            Id = "Electronics",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = "Jewelry",
                            Name = "Jewelry"
                        },
                        new
                        {
                            Id = "Shoes",
                            Name = "Shoes"
                        },
                        new
                        {
                            Id = "Sports",
                            Name = "Sports"
                        },
                        new
                        {
                            Id = "Tools",
                            Name = "Tools"
                        },
                        new
                        {
                            Id = "Toys",
                            Name = "Toys"
                        });
                });

            modelBuilder.Entity("K_Smart_IMS.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = "Appliances",
                            Name = "Kenmore Countertop Microwave",
                            Price = 116.98999999999999,
                            Qty = 3
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = "Appliances",
                            Name = "Kenmore Slide-In Gas Range with Turbo Boil",
                            Price = 1554.6900000000001,
                            Qty = 4
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = "Appliances",
                            Name = "Samsung Elite 4-door Fridge",
                            Price = 2229.9899999999998,
                            Qty = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = "Appliances",
                            Name = "Kenmore Enery Star Top-Load Washer",
                            Price = 854.99000000000001,
                            Qty = 5
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = "Appliances",
                            Name = "Front Load Gas Dryer",
                            Price = 767.99000000000001,
                            Qty = 3
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = "Appliances",
                            Name = "Front Load Electric Dryer",
                            Price = 724.99000000000001,
                            Qty = 2
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = "Baby",
                            Name = "Evenflo Angled Feeding Bottle, 4pk",
                            Price = 13.99,
                            Qty = 9
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = "Baby",
                            Name = "Anti-Bacterial Bottle Covers, 6pk",
                            Price = 9.9900000000000002,
                            Qty = 12
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = "Baby",
                            Name = "Chicco Glow-in-the-Dark Pacifier",
                            Price = 8.4900000000000002,
                            Qty = 8
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = "Baby",
                            Name = "Pumpkin & Banana Pureed Baby Food, 8pk",
                            Price = 19.890000000000001,
                            Qty = 17
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = "Baby",
                            Name = "Carrot and Squash Pureed Baby Food, 8pk",
                            Price = 19.489999999999998,
                            Qty = 15
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = "Baby",
                            Name = "Turkey and Peas Pureed Baby Food, 8pk",
                            Price = 21.09,
                            Qty = 12
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = "Baby",
                            Name = "Similac Soy Isomil Infant Formula w/ Iron",
                            Price = 36.990000000000002,
                            Qty = 10
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = "Cleaning",
                            Name = "Dawn Ultra Liquid Dishwashing Dish Soap",
                            Price = 4.9900000000000002,
                            Qty = 13
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = "Cleaning",
                            Name = "Dawn Antibacterial Dishwashing Liquid Dish Soap, Orange Scent",
                            Price = 5.9900000000000002,
                            Qty = 10
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = "Cleaning",
                            Name = "Dawn Ultra Bottle Brush",
                            Price = 3.4900000000000002,
                            Qty = 9
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = "Cleaning",
                            Name = "Clorox Splashless Bleach",
                            Price = 9.0899999999999999,
                            Qty = 15
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = "Cleaning",
                            Name = "Clorox Pro Results Regular Scent Outdoor Bleach",
                            Price = 9.0899999999999999,
                            Qty = 10
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = "Cleaning",
                            Name = "Lysol Linen Disenfectant Spray, 2-pk",
                            Price = 7.4900000000000002,
                            Qty = 23
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = "Cleaning",
                            Name = "Glad Lemon Scented 13-gal Kitchen Bags, 110pk",
                            Price = 14.99,
                            Qty = 8
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = "Cleaning",
                            Name = "Glad Force Flex 13-gal Kitchen Bags, 110pk",
                            Price = 16.989999999999998,
                            Qty = 9
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = "Clothes",
                            Name = "Men's Short Sleeve Work Shirt",
                            Price = 12.99,
                            Qty = 15
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = "Clothes",
                            Name = "Men's Fleece Plaid Shirt Jacket",
                            Price = 27.690000000000001,
                            Qty = 9
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = "Clothes",
                            Name = "Men's Hooded Sweatshirt",
                            Price = 19.989999999999998,
                            Qty = 11
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = "Clothes",
                            Name = "Women's Skinny Jeans",
                            Price = 20.989999999999998,
                            Qty = 3
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = "Clothes",
                            Name = "Men's Straight Leg Pants",
                            Price = 17.989999999999998,
                            Qty = 8
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = "Clothes",
                            Name = "Women's Utility Jacket",
                            Price = 14.99,
                            Qty = 6
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = "Clothes",
                            Name = "Men's Denim Jacket",
                            Price = 28.989999999999998,
                            Qty = 5
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = "Electronics",
                            Name = "82in Class Ultra High Definition Crystal 4K Smart TV",
                            Price = 1119.99,
                            Qty = 5
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = "Electronics",
                            Name = "50in X85J 4K HDR LED TV",
                            Price = 999.99000000000001,
                            Qty = 4
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = "Electronics",
                            Name = "Home Audio Radio CD/Cassette Boombox",
                            Price = 69.989999999999995,
                            Qty = 11
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = "Electronics",
                            Name = "Nintendo Switch Lite Handheld Console - Gray",
                            Price = 234.99000000000001,
                            Qty = 7
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = "Electronics",
                            Name = "Sony PlayStation 5 DualSense Wireless Controller PS5 - White",
                            Price = 67.989999999999995,
                            Qty = 10
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = "Jewelry",
                            Name = "Timex Main Street Classic Silver Tone Stainless Steel Watch",
                            Price = 209.49000000000001,
                            Qty = 1
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = "Jewelry",
                            Name = "Timex Kids Machines Soccer Watch",
                            Price = 29.989999999999998,
                            Qty = 9
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = "Jewelry",
                            Name = "Timex Women's Miami Bracelet 20mm Nylon Strap Watch",
                            Price = 89.989999999999995,
                            Qty = 4
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = "Jewelry",
                            Name = "Pompeii 1/3ct Diamond Studs 14K Yellow Gold",
                            Price = 114.98999999999999,
                            Qty = 2
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = "Jewelry",
                            Name = "Giant 2.00CTW Reversible Genuine Diamond White Heart Pendant Necklace",
                            Price = 99.989999999999995,
                            Qty = 4
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = "Shoes",
                            Name = "Adidas Nite Jogger Men's Shoes White-Black-Signal Green",
                            Price = 96.989999999999995,
                            Qty = 10
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = "Shoes",
                            Name = "Adidas UltraBoost 5.0 DNA Men's Shoes Cloud White",
                            Price = 78.689999999999998,
                            Qty = 3
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = "Shoes",
                            Name = "Skechers Performance Womens Go Walk Lite",
                            Price = 35.990000000000002,
                            Qty = 8
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = "Shoes",
                            Name = "Skechers Women's Empress Solo Mood Slip On",
                            Price = 45.990000000000002,
                            Qty = 7
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = "Shoes",
                            Name = "Steve Madden Mens Boxxeer Lace Up Oxford Shoe",
                            Price = 79.989999999999995,
                            Qty = 6
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = "Shoes",
                            Name = "Steve Madden Womens NONSTP Heeled Sandal",
                            Price = 85.989999999999995,
                            Qty = 4
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = "Sports",
                            Name = "Wilson Football Official Duke NFL Goodell",
                            Price = 88.989999999999995,
                            Qty = 14
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = "Sports",
                            Name = "Wilson Evolution Intermediate Size Game Basketball",
                            Price = 54.689999999999998,
                            Qty = 9
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = "Sports",
                            Name = "Wilson Sporting Goods Serena 21 Inch Junior Tennis Racquet",
                            Price = 29.989999999999998,
                            Qty = 10
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = "Sports",
                            Name = "Premium Mens Golf Clubs Set, Right Hand",
                            Price = 554.99000000000001,
                            Qty = 3
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = "Sports",
                            Name = "Coleman Dome Tent w/ Screen Room",
                            Price = 177.99000000000001,
                            Qty = 4
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = "Sports",
                            Name = "LED Green Battery Lantern",
                            Price = 24.989999999999998,
                            Qty = 6
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = "Sports",
                            Name = "Stearns Infinity Floating Vest",
                            Price = 33.990000000000002,
                            Qty = 1
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = "Tools",
                            Name = "12-Volt Lithium-Ion Cordless 1/4 in. Hex Screwdriver",
                            Price = 66.989999999999995,
                            Qty = 5
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = "Tools",
                            Name = "M18 FUEL 16in Chainsaw Kit",
                            Price = 754.69000000000005,
                            Qty = 3
                        },
                        new
                        {
                            Id = 54,
                            CategoryId = "Tools",
                            Name = "Craftsman 165-Piece Mechanic Tool Set",
                            Price = 129.99000000000001,
                            Qty = 3
                        },
                        new
                        {
                            Id = 55,
                            CategoryId = "Tools",
                            Name = "Craftsman 14 pc. Combination Wrench Set",
                            Price = 19.989999999999998,
                            Qty = 10
                        },
                        new
                        {
                            Id = 56,
                            CategoryId = "Tools",
                            Name = "Craftsman 5-Piece Phillips Screwdriver Set",
                            Price = 12.99,
                            Qty = 7
                        },
                        new
                        {
                            Id = 57,
                            CategoryId = "Tools",
                            Name = "Stanley 19-Inch Toolbox w/ AutoLatch",
                            Price = 27.989999999999998,
                            Qty = 6
                        },
                        new
                        {
                            Id = 58,
                            CategoryId = "Tools",
                            Name = "Stanley Hacksaw, Black/Yellow",
                            Price = 14.99,
                            Qty = 9
                        },
                        new
                        {
                            Id = 59,
                            CategoryId = "Toys",
                            Name = "Guess Who? Classic Game",
                            Price = 14.99,
                            Qty = 11
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = "Toys",
                            Name = "Classic Jenga Game",
                            Price = 14.69,
                            Qty = 12
                        },
                        new
                        {
                            Id = 61,
                            CategoryId = "Toys",
                            Name = "Classic Operation Game",
                            Price = 29.989999999999998,
                            Qty = 4
                        },
                        new
                        {
                            Id = 62,
                            CategoryId = "Toys",
                            Name = "Barbie Spin ‘n Twirl Gymnast Doll and Accessories",
                            Price = 24.989999999999998,
                            Qty = 7
                        },
                        new
                        {
                            Id = 63,
                            CategoryId = "Toys",
                            Name = "Barbie Dreamhouse Adventures Tiki Hut",
                            Price = 29.989999999999998,
                            Qty = 5
                        },
                        new
                        {
                            Id = 64,
                            CategoryId = "Toys",
                            Name = "Hot Wheels Mega Car Wash Play Set",
                            Price = 44.990000000000002,
                            Qty = 4
                        });
                });

            modelBuilder.Entity("K_Smart_IMS.Models.ItemVendor", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "VendorId");

                    b.HasIndex("VendorId");

                    b.ToTable("ItemVendors");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            VendorId = 1
                        },
                        new
                        {
                            ItemId = 2,
                            VendorId = 1
                        },
                        new
                        {
                            ItemId = 3,
                            VendorId = 2
                        },
                        new
                        {
                            ItemId = 4,
                            VendorId = 1
                        },
                        new
                        {
                            ItemId = 5,
                            VendorId = 3
                        },
                        new
                        {
                            ItemId = 6,
                            VendorId = 3
                        },
                        new
                        {
                            ItemId = 7,
                            VendorId = 4
                        },
                        new
                        {
                            ItemId = 8,
                            VendorId = 5
                        },
                        new
                        {
                            ItemId = 9,
                            VendorId = 7
                        },
                        new
                        {
                            ItemId = 10,
                            VendorId = 6
                        },
                        new
                        {
                            ItemId = 11,
                            VendorId = 6
                        },
                        new
                        {
                            ItemId = 12,
                            VendorId = 6
                        },
                        new
                        {
                            ItemId = 13,
                            VendorId = 5
                        },
                        new
                        {
                            ItemId = 14,
                            VendorId = 8
                        },
                        new
                        {
                            ItemId = 15,
                            VendorId = 8
                        },
                        new
                        {
                            ItemId = 16,
                            VendorId = 8
                        },
                        new
                        {
                            ItemId = 17,
                            VendorId = 9
                        },
                        new
                        {
                            ItemId = 18,
                            VendorId = 9
                        },
                        new
                        {
                            ItemId = 19,
                            VendorId = 10
                        },
                        new
                        {
                            ItemId = 20,
                            VendorId = 11
                        },
                        new
                        {
                            ItemId = 21,
                            VendorId = 11
                        },
                        new
                        {
                            ItemId = 22,
                            VendorId = 12
                        },
                        new
                        {
                            ItemId = 23,
                            VendorId = 12
                        },
                        new
                        {
                            ItemId = 24,
                            VendorId = 13
                        },
                        new
                        {
                            ItemId = 25,
                            VendorId = 14
                        },
                        new
                        {
                            ItemId = 26,
                            VendorId = 14
                        },
                        new
                        {
                            ItemId = 27,
                            VendorId = 14
                        },
                        new
                        {
                            ItemId = 28,
                            VendorId = 14
                        },
                        new
                        {
                            ItemId = 29,
                            VendorId = 2
                        },
                        new
                        {
                            ItemId = 30,
                            VendorId = 15
                        },
                        new
                        {
                            ItemId = 31,
                            VendorId = 15
                        },
                        new
                        {
                            ItemId = 32,
                            VendorId = 16
                        },
                        new
                        {
                            ItemId = 33,
                            VendorId = 15
                        },
                        new
                        {
                            ItemId = 34,
                            VendorId = 17
                        },
                        new
                        {
                            ItemId = 35,
                            VendorId = 17
                        },
                        new
                        {
                            ItemId = 36,
                            VendorId = 17
                        },
                        new
                        {
                            ItemId = 37,
                            VendorId = 18
                        },
                        new
                        {
                            ItemId = 38,
                            VendorId = 19
                        },
                        new
                        {
                            ItemId = 39,
                            VendorId = 20
                        },
                        new
                        {
                            ItemId = 40,
                            VendorId = 20
                        },
                        new
                        {
                            ItemId = 41,
                            VendorId = 21
                        },
                        new
                        {
                            ItemId = 42,
                            VendorId = 21
                        },
                        new
                        {
                            ItemId = 43,
                            VendorId = 22
                        },
                        new
                        {
                            ItemId = 44,
                            VendorId = 22
                        },
                        new
                        {
                            ItemId = 45,
                            VendorId = 23
                        },
                        new
                        {
                            ItemId = 46,
                            VendorId = 23
                        },
                        new
                        {
                            ItemId = 47,
                            VendorId = 23
                        },
                        new
                        {
                            ItemId = 48,
                            VendorId = 24
                        },
                        new
                        {
                            ItemId = 49,
                            VendorId = 25
                        },
                        new
                        {
                            ItemId = 50,
                            VendorId = 25
                        },
                        new
                        {
                            ItemId = 51,
                            VendorId = 25
                        },
                        new
                        {
                            ItemId = 52,
                            VendorId = 26
                        },
                        new
                        {
                            ItemId = 53,
                            VendorId = 26
                        },
                        new
                        {
                            ItemId = 54,
                            VendorId = 27
                        },
                        new
                        {
                            ItemId = 55,
                            VendorId = 27
                        },
                        new
                        {
                            ItemId = 56,
                            VendorId = 27
                        },
                        new
                        {
                            ItemId = 57,
                            VendorId = 28
                        },
                        new
                        {
                            ItemId = 58,
                            VendorId = 28
                        },
                        new
                        {
                            ItemId = 59,
                            VendorId = 29
                        },
                        new
                        {
                            ItemId = 60,
                            VendorId = 29
                        },
                        new
                        {
                            ItemId = 61,
                            VendorId = 29
                        },
                        new
                        {
                            ItemId = 62,
                            VendorId = 30
                        },
                        new
                        {
                            ItemId = 63,
                            VendorId = 30
                        },
                        new
                        {
                            ItemId = 64,
                            VendorId = 30
                        });
                });

            modelBuilder.Entity("K_Smart_IMS.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("K_Smart_IMS.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kenmore"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 3,
                            Name = "GE"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Evenflo"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Similac"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Gerber"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Chicco"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Dawn"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Clorox"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Lysol"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Glad"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Dickies"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Gildan"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Route 66"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Sony"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Nintendo"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Timex"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Pompeii"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Natalia Drake"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Skechers"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Steve Madden"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Wilson"
                        },
                        new
                        {
                            Id = 24,
                            Name = "MacGregor Golf"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Coleman"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Milwaukee"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Craftsman"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Stanley"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Hasbro"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Mattel"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("K_Smart_IMS.Models.Item", b =>
                {
                    b.HasOne("K_Smart_IMS.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("K_Smart_IMS.Models.ItemVendor", b =>
                {
                    b.HasOne("K_Smart_IMS.Models.Item", "Item")
                        .WithMany("ItemVendors")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("K_Smart_IMS.Models.Vendor", "Vendor")
                        .WithMany("ItemVendors")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("K_Smart_IMS.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("K_Smart_IMS.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("K_Smart_IMS.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("K_Smart_IMS.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
